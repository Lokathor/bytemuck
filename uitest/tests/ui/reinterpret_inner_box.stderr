error[E0080]: evaluation of `<bytemuck::cast::BoxT as bytemuck::cast::AssertClassContraints<[u8; 2], u16>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     Src::ALIGN == Dst::ALIGN,
  | |     "Attempted conversion between `Box` types with different alignments"
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between `Box` types with different alignments', $WORKSPACE/src/cast.rs:1303:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of `<*const [u8; 2] as bytemuck::cast::CastRaw<*const u16>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       align_of::<Src>() >= align_of::<Dst>(),
  | |       "Attempted conversion to a type with a stricter alignment"
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion to a type with a stricter alignment', $WORKSPACE/src/cast.rs:824:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[u8; 2]> as bytemuck::ReinterpretInner<'_, std::boxed::Box<u16>>>::reinterpret_inner`
 --> tests/ui/reinterpret_inner_box.rs:4:21
  |
4 |   let _: Box<u16> = Box::new([0u8; 2]).reinterpret_inner();
  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<bytemuck::cast::BoxT as bytemuck::cast::AssertClassContraints<[u16; 2], u32>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     Src::ALIGN == Dst::ALIGN,
  | |     "Attempted conversion between `Box` types with different alignments"
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between `Box` types with different alignments', $WORKSPACE/src/cast.rs:1303:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of `<*const [u16; 2] as bytemuck::cast::CastRaw<*const u32>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       align_of::<Src>() >= align_of::<Dst>(),
  | |       "Attempted conversion to a type with a stricter alignment"
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion to a type with a stricter alignment', $WORKSPACE/src/cast.rs:824:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[u16; 2]> as bytemuck::ReinterpretInner<'_, std::boxed::Box<u32>>>::reinterpret_inner`
 --> tests/ui/reinterpret_inner_box.rs:5:21
  |
5 |   let _: Box<u32> = Box::new([0u16; 2]).reinterpret_inner();
  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<bytemuck::cast::BoxT as bytemuck::cast::AssertClassContraints<u64, [u32; 2]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     Src::ALIGN == Dst::ALIGN,
  | |     "Attempted conversion between `Box` types with different alignments"
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between `Box` types with different alignments', $WORKSPACE/src/cast.rs:1303:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<u64> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[u32; 2]>>>::reinterpret_inner`
 --> tests/ui/reinterpret_inner_box.rs:6:26
  |
6 |   let _: Box<[u32; 2]> = Box::new(0u64).reinterpret_inner();
  |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<*const u8 as bytemuck::cast::CastRaw<*const [u8; 2]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       size_of::<Src>() == size_of::<Dst>(),
  | |       "Attempted conversion between types of different sizes."
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion between types of different sizes.', $WORKSPACE/src/cast.rs:820:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<u8> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[u8; 2]>>>::reinterpret_inner`
 --> tests/ui/reinterpret_inner_box.rs:8:25
  |
8 |   let _: Box<[u8; 2]> = Box::new(0u8).reinterpret_inner();
  |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<*const u16 as bytemuck::cast::CastRaw<*const [u16; 2]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       size_of::<Src>() == size_of::<Dst>(),
  | |       "Attempted conversion between types of different sizes."
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion between types of different sizes.', $WORKSPACE/src/cast.rs:820:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<u16> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[u16; 2]>>>::reinterpret_inner`
 --> tests/ui/reinterpret_inner_box.rs:9:26
  |
9 |   let _: Box<[u16; 2]> = Box::new(0u16).reinterpret_inner();
  |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<*const u64 as bytemuck::cast::CastRaw<*const [u64; 2]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       size_of::<Src>() == size_of::<Dst>(),
  | |       "Attempted conversion between types of different sizes."
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion between types of different sizes.', $WORKSPACE/src/cast.rs:820:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<u64> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[u64; 2]>>>::reinterpret_inner`
  --> tests/ui/reinterpret_inner_box.rs:10:26
   |
10 |   let _: Box<[u64; 2]> = Box::new(0u64).reinterpret_inner();
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<bytemuck::cast::BoxT as bytemuck::cast::AssertClassContraints<[[u8; 2]; 2], [u16]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     Src::ALIGN == Dst::ALIGN,
  | |     "Attempted conversion between `Box` types with different alignments"
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between `Box` types with different alignments', $WORKSPACE/src/cast.rs:1303:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[[u8; 2]; 2]> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[u16]>>>::reinterpret_inner`
  --> tests/ui/reinterpret_inner_box.rs:12:23
   |
12 |   let _: Box<[u16]> = Box::new([[0u8; 2]; 2]).reinterpret_inner();
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<bytemuck::cast::BoxT as bytemuck::cast::AssertClassContraints<[[u16; 2]; 2], [u32]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     Src::ALIGN == Dst::ALIGN,
  | |     "Attempted conversion between `Box` types with different alignments"
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between `Box` types with different alignments', $WORKSPACE/src/cast.rs:1303:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[[u16; 2]; 2]> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[u32]>>>::reinterpret_inner`
  --> tests/ui/reinterpret_inner_box.rs:13:23
   |
13 |   let _: Box<[u32]> = Box::new([[0u16; 2]; 2]).reinterpret_inner();
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<bytemuck::cast::BoxT as bytemuck::cast::AssertClassContraints<u64, [[u32; 2]]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     Src::ALIGN == Dst::ALIGN,
  | |     "Attempted conversion between `Box` types with different alignments"
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between `Box` types with different alignments', $WORKSPACE/src/cast.rs:1303:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<u64> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[[u32; 2]]>>>::reinterpret_inner`
  --> tests/ui/reinterpret_inner_box.rs:14:28
   |
14 |   let _: Box<[[u32; 2]]> = Box::new(0u64).reinterpret_inner();
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<*const [u8; 1] as bytemuck::cast::CastRaw<bytemuck::cast::RawSlice<()>>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       size_of::<Src>() == size_of::<Dst>()
  | |         || (size_of::<Dst>() != 0 && size_of::<Src>() % size_of::<Dst>() == 0),
  | |       "Attempted conversion to a slice which cannot match the size of the item"
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion to a slice which cannot match the size of the item', $WORKSPACE/src/cast.rs:859:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[u8; 1]> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[()]>>>::reinterpret_inner`
  --> tests/ui/reinterpret_inner_box.rs:16:22
   |
16 |   let _: Box<[()]> = Box::new([0u8; 1]).reinterpret_inner();
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<*const [[u8; 3]; 3] as bytemuck::cast::CastRaw<bytemuck::cast::RawSlice<[u8; 2]>>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       size_of::<Src>() == size_of::<Dst>()
  | |         || (size_of::<Dst>() != 0 && size_of::<Src>() % size_of::<Dst>() == 0),
  | |       "Attempted conversion to a slice which cannot match the size of the item"
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion to a slice which cannot match the size of the item', $WORKSPACE/src/cast.rs:859:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[[u8; 3]; 3]> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[[u8; 2]]>>>::reinterpret_inner`
  --> tests/ui/reinterpret_inner_box.rs:17:27
   |
17 |   let _: Box<[[u8; 2]]> = Box::new([[0u8; 3]; 3]).reinterpret_inner();
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<*const [[u16; 5]; 1] as bytemuck::cast::CastRaw<bytemuck::cast::RawSlice<[u16; 2]>>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       size_of::<Src>() == size_of::<Dst>()
  | |         || (size_of::<Dst>() != 0 && size_of::<Src>() % size_of::<Dst>() == 0),
  | |       "Attempted conversion to a slice which cannot match the size of the item"
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion to a slice which cannot match the size of the item', $WORKSPACE/src/cast.rs:859:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[[u16; 5]; 1]> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[[u16; 2]]>>>::reinterpret_inner`
  --> tests/ui/reinterpret_inner_box.rs:18:28
   |
18 |   let _: Box<[[u16; 2]]> = Box::new([[0u16; 5]; 1]).reinterpret_inner();
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<*const [[u32; 1]; 1] as bytemuck::cast::CastRaw<bytemuck::cast::RawSlice<[u32; 2]>>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  | /     assert!(
  | |       size_of::<Src>() == size_of::<Dst>()
  | |         || (size_of::<Dst>() != 0 && size_of::<Src>() % size_of::<Dst>() == 0),
  | |       "Attempted conversion to a slice which cannot match the size of the item"
  | |     );
  | |_____^ the evaluated program panicked at 'Attempted conversion to a slice which cannot match the size of the item', $WORKSPACE/src/cast.rs:859:5
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[[u32; 1]; 1]> as bytemuck::ReinterpretInner<'_, std::boxed::Box<[[u32; 2]]>>>::reinterpret_inner`
  --> tests/ui/reinterpret_inner_box.rs:19:28
   |
19 |   let _: Box<[[u32; 2]]> = Box::new([[0u32; 1]; 1]).reinterpret_inner();
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
