error[E0080]: evaluation of `<*const u8 as bytemuck::cast::TryCastRaw<*const [u8; 2]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     size_of::<Src>() == size_of::<Dst>(),
  | |     "Attempted conversion between types of different sizes."
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between types of different sizes.', $WORKSPACE/src/cast.rs:1049:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: erroneous constant used
    --> $WORKSPACE/src/cast.rs
     |
     |   const ASSERT: () = <Src as TryCastRaw<Dst>>::ASSERT;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: the above error was encountered while instantiating `fn <std::option::Option<&u8> as bytemuck::TryReinterpretInner<'_, std::option::Option<&[u8; 2]>>>::try_reinterpret_inner`
 --> tests/ui/try_reinterpret_inner_option.rs:4:29
  |
4 |   let _: Option<&[u8; 2]> = Some(&0u8).try_reinterpret_inner().unwrap();
  |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<*const u16 as bytemuck::cast::TryCastRaw<*const [u16; 2]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     size_of::<Src>() == size_of::<Dst>(),
  | |     "Attempted conversion between types of different sizes."
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between types of different sizes.', $WORKSPACE/src/cast.rs:1049:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: erroneous constant used
    --> $WORKSPACE/src/cast.rs
     |
     |   const ASSERT: () = <*const Src as TryCastRaw<*const Dst>>::ASSERT;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: the above error was encountered while instantiating `fn <std::option::Option<&mut u16> as bytemuck::TryReinterpretInner<'_, std::option::Option<&mut [u16; 2]>>>::try_reinterpret_inner`
 --> tests/ui/try_reinterpret_inner_option.rs:6:5
  |
6 |     Some(&mut 0u16).try_reinterpret_inner().unwrap();
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<bytemuck::cast::RawSlice<u8> as bytemuck::cast::TryCastRaw<bytemuck::cast::RawSlice<()>>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     (size_of::<Dst>() == 0) == (size_of::<Src>() == 0),
  | |     "Attempted conversion between a zero-sized type and a non-zero-sized type"
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between a zero-sized type and a non-zero-sized type', $WORKSPACE/src/cast.rs:1082:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: erroneous constant used
    --> $WORKSPACE/src/cast.rs
     |
     |   const ASSERT: () = <RawSlice<Src> as TryCastRaw<RawSlice<Dst>>>::ASSERT;
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: the above error was encountered while instantiating `fn <&mut [u8] as bytemuck::TryReinterpretInner<'_, &mut [()]>>::try_reinterpret_inner`
 --> tests/ui/try_reinterpret_inner_option.rs:8:10
  |
8 |     Some([0u8; 1].as_mut_slice().try_reinterpret_inner().unwrap());
  |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0080]: evaluation of `<bytemuck::cast::BoxT as bytemuck::cast::AssertClassContraints<[u16; 2], [u8; 4]>>::ASSERT` failed
 --> $WORKSPACE/src/cast.rs
  |
  |     const ASSERT: () = assert!(
  |  ______________________^
  | |     Src::ALIGN == Dst::ALIGN,
  | |     "Attempted conversion between `Box` types with different alignments"
  | |   );
  | |___^ the evaluated program panicked at 'Attempted conversion between `Box` types with different alignments', $WORKSPACE/src/cast.rs:1303:22
  |
  = note: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

note: the above error was encountered while instantiating `fn <std::boxed::Box<[u16; 2]> as bytemuck::TryReinterpretInner<'_, std::boxed::Box<[u8; 4]>>>::try_reinterpret_inner`
  --> tests/ui/try_reinterpret_inner_option.rs:10:10
   |
10 |     Some(Box::new([0u16; 2]).try_reinterpret_inner().unwrap());
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
